version: '3'
services:

  fastapi:
    container_name: fastapi_service
    build: .
    command: python run.py
    volumes:
      - .:/usr/src/fastapi/
    ports:
      - '8080:8080'
    environment:
      FASTAPI_SERVICE_CONTAINER_HOST: ${FASTAPI_SERVICE_CONTAINER_HOST}
      FASTAPI_SERVICE_CONTAINER_PORT: ${FASTAPI_SERVICE_CONTAINER_PORT}
      FASTAPI_SERVICE_CONTAINER_LOG_LEVEL: ${FASTAPI_SERVICE_CONTAINER_LOG_LEVEL}
      FASTAPI_SERVICE_REDIS_HOST: ${FASTAPI_SERVICE_REDIS_HOST}
      FASTAPI_SERVICE_REDIS_POST: ${FASTAPI_SERVICE_REDIS_POST}
      FASTAPI_SERVICE_REDIS_DB: ${FASTAPI_SERVICE_REDIS_DB}
      FASTAPI_SERVICE_MONGO_HOST: ${FASTAPI_SERVICE_MONGO_HOST}
      FASTAPI_SERVICE_MONGO_PORT: ${FASTAPI_SERVICE_MONGO_PORT}
      FASTAPI_SERVICE_MONGO_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      FASTAPI_SERVICE_MONGO_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      FASTAPI_SERVICE_ZOOKEEPER_PORT: ${FASTAPI_SERVICE_ZOOKEEPER_PORT}
      FASTAPI_SERVICE_ZOOKEEPER_CLIENT_PORT: ${FASTAPI_SERVICE_ZOOKEEPER_CLIENT_PORT}
      FASTAPI_SERVICE_ZOOKEEPER_TICK_TIME: ${FASTAPI_SERVICE_ZOOKEEPER_TICK_TIME}
      FASTAPI_SERVICE_KAFKA_HOST: ${FASTAPI_SERVICE_KAFKA_HOST}
      FASTAPI_SERVICE_KAFKA_PORT: ${FASTAPI_SERVICE_KAFKA_PORT}
      FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_BOOTSTRAPSERVERS: ${FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_BOOTSTRAPSERVERS}
      FASTAPI_SERVICE_TWITCH_MAIN_URL: ${FASTAPI_SERVICE_TWITCH_MAIN_URL}
      FASTAPI_SERVICE_TWITCH_GAME_URL: ${FASTAPI_SERVICE_TWITCH_GAME_URL}
      FASTAPI_SERVICE_TWITCH_STREAMS_URL: ${FASTAPI_SERVICE_TWITCH_STREAMS_URL}
      FASTAPI_SERVICE_TWITCH_REFRESH: ${FASTAPI_SERVICE_TWITCH_REFRESH}
      FASTAPI_SERVICE_TWITCH_CLIENT_ID: ${FASTAPI_SERVICE_TWITCH_CLIENT_ID}
      FASTAPI_SERVICE_TWITCH_CLIENT_SECRET: ${FASTAPI_SERVICE_TWITCH_CLIENT_SECRET}
      FASTAPI_SERVICE_TWITCH_ACCESS_TOKEN: ${FASTAPI_SERVICE_TWITCH_ACCESS_TOKEN}
      FASTAPI_SERVICE_PARSER_WOMEN_URL: ${FASTAPI_SERVICE_PARSER_WOMEN_URL}
      FASTAPI_SERVICE_PARSER_MEN_URL: ${FASTAPI_SERVICE_PARSER_MEN_URL}
    depends_on:
      - redis
      - mongodb
      - kafka

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - ~/apps/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  redis:
    image: redis
    container_name: redis
    command: redis-server
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    container_name: zookeeper
    ports:
    - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: ${FASTAPI_SERVICE_ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${FASTAPI_SERVICE_ZOOKEEPER_TICK_TIME}

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    ports:
      - '9092:9092'
      - '9997:9997'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${FASTAPI_SERVICE_KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${FASTAPI_SERVICE_KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${FASTAPI_SERVICE_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${FASTAPI_SERVICE_KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8081:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: ${FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_NAME}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_BOOTSTRAPSERVERS}
      KAFKA_CLUSTERS_0_ZOOKEEPER: ${FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_ZOOKEEPER}
      KAFKA_CLUSTERS_0_READONLY: ${FASTAPI_SERVICE_KAFKA_UI_CLUSTERS_0_READONLY}
    depends_on:
      - kafka
      - zookeeper
